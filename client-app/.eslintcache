[{"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\index.tsx":"1","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\App.tsx":"3","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\nav\\NavBar.tsx":"4","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\dashboard\\VisitDashboard.tsx":"5","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\dashboard\\VisitList.tsx":"6","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetails.tsx":"7","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\form\\VisitForm.tsx":"8","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\api\\agent.ts":"9","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\LoadingComponent.tsx":"10","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\stores\\visitStore.ts":"11","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\home\\HomePage.tsx":"12","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\ScrollToTop.tsx":"13","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\dashboard\\VisitListItem.tsx":"14","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedInfo.tsx":"15","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedHeader.tsx":"16","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\NotFound.tsx":"17","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\TextInput.tsx":"18","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\TextAreaInput.tsx":"19","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\SelectInput.tsx":"20","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\options\\categoryOptions.ts":"21","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\DateInput.tsx":"22","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\util\\util.ts":"23","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\models\\visit_interface.tsx":"24","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedChat.tsx":"25","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedSidebar.tsx":"26"},{"size":953,"mtime":1609378150017,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":1634,"mtime":1609353760438,"results":"30","hashOfConfig":"28"},{"size":877,"mtime":1609268310492,"results":"31","hashOfConfig":"28"},{"size":1122,"mtime":1609268566053,"results":"32","hashOfConfig":"28"},{"size":1026,"mtime":1609290338537,"results":"33","hashOfConfig":"28"},{"size":1499,"mtime":1609347835038,"results":"34","hashOfConfig":"28"},{"size":4190,"mtime":1609440509574,"results":"35","hashOfConfig":"28"},{"size":2054,"mtime":1609364895781,"results":"36","hashOfConfig":"28"},{"size":567,"mtime":1609245203067,"results":"37","hashOfConfig":"28"},{"size":6153,"mtime":1609438246238,"results":"38","hashOfConfig":"28"},{"size":1223,"mtime":1609291026648,"results":"39","hashOfConfig":"28"},{"size":302,"mtime":1609267882545,"results":"40","hashOfConfig":"28"},{"size":1513,"mtime":1609434603747,"results":"41","hashOfConfig":"28"},{"size":1487,"mtime":1609434904515,"results":"42","hashOfConfig":"28"},{"size":1839,"mtime":1609441237269,"results":"43","hashOfConfig":"28"},{"size":619,"mtime":1609341579619,"results":"44","hashOfConfig":"28"},{"size":664,"mtime":1609376543426,"results":"45","hashOfConfig":"28"},{"size":675,"mtime":1609371949061,"results":"46","hashOfConfig":"28"},{"size":844,"mtime":1609376546253,"results":"47","hashOfConfig":"28"},{"size":360,"mtime":1609376723957,"results":"48","hashOfConfig":"28"},{"size":1042,"mtime":1609434744754,"results":"49","hashOfConfig":"28"},{"size":1217,"mtime":1609436034329,"results":"50","hashOfConfig":"28"},{"size":1159,"mtime":1609440579316,"results":"51","hashOfConfig":"28"},{"size":2155,"mtime":1609290137050,"results":"52","hashOfConfig":"28"},{"size":1536,"mtime":1609440771651,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"gkfx7r",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\index.tsx",[],["110","111"],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\App.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\nav\\NavBar.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\dashboard\\VisitDashboard.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\dashboard\\VisitList.tsx",["112","113","114"],"import React, { Fragment, useContext } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Item, Label } from 'semantic-ui-react'\r\n\r\nimport VisitStore from '../../../App/stores/visitStore'\r\nimport VisitListItem from './VisitListItem'\r\n\r\n\r\nconst VisitList: React.FC = () => {\r\n    \r\n    const visitStore = useContext(VisitStore)\r\n    const {visitsByDate, deleteVisit, submitting, target} = visitStore\r\n\r\n    return (\r\n        <Fragment>\r\n            {visitsByDate.map(([group, visits]) => (\r\n                <Fragment key={group} >\r\n                    <Label size='large' color='blue' >\r\n                        {group}\r\n                    </Label>        \r\n   \r\n                    <Item.Group divided>\r\n                        {visits.map(visit => (\r\n                            <VisitListItem key={visit.id} visit={visit} />\r\n                        ))}\r\n                    </Item.Group>\r\n\r\n                </Fragment>\r\n            ))}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default observer(VisitList)\r\n","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetails.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\form\\VisitForm.tsx",["115","116"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Form, Segment, Button, Grid } from 'semantic-ui-react'\r\nimport { VisitFormValues } from '../../../App/models/visit_interface'\r\n// import {v4 as uuid} from 'uuid'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport TextInput from '../../../App/common/form/TextInput'\r\nimport TextAreaInput from '../../../App/common/form/TextAreaInput'\r\nimport SelectInput from '../../../App/common/form/SelectInput' \r\nimport { category } from '../../../App/common/options/categoryOptions';\r\nimport { combineDateAndTime } from '../../../App/common/util/util';\r\n\r\nimport VisitStore from '../../../App/stores/visitStore'\r\nimport DateInput from '../../../App/common/form/DateInput'\r\n\r\n\r\n// Need the interface to set typeface of ID for match.params.id\r\ninterface DetailParams {\r\n    id: string\r\n  }\r\n\r\nconst VisitForm:React.FC<RouteComponentProps<DetailParams>> = ({ match, history }) => {\r\n\r\n    const visitStore = useContext(VisitStore)\r\n\r\n    const {/*createVisit, editVisit,*/ submitting, visit: initialFormState, loadVisit, clearVisit} = visitStore\r\n\r\n    const [ visit, setVisit ] = useState(new VisitFormValues())\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (match.params.id) {\r\n            setLoading(true)\r\n            loadVisit(match.params.id)\r\n                .then((visit) => setVisit(new VisitFormValues(visit))\r\n            ).finally(() => setLoading(false))\r\n        }\r\n    }, [loadVisit, match.params.id])\r\n\r\n    // const handleSubmit = () => {\r\n    //     if (visit.id.length === 0) {\r\n    //         let newVisit = {\r\n    //             ...visit,\r\n    //             id: uuid()\r\n    //         }\r\n    //         createVisit(newVisit).then(() => history.push(`/visits/${newVisit.id}`) );\r\n    //     } else {\r\n    //         editVisit(visit).then(() => history.push(`/visits/${visit.id}`) )\r\n    //     }\r\n    // }\r\n\r\n    const handleFinalFormSubmit = (values: any) => {\r\n        const dateAndTime = combineDateAndTime(values.date, values.time)\r\n        const {date, time, ...visit} = values\r\n        visit.date = dateAndTime\r\n        console.log(visit)\r\n      };\r\n\r\n     return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <Segment clearing>\r\n                    <FinalForm \r\n                        initialValues={visit}\r\n                        onSubmit={handleFinalFormSubmit}\r\n                        render={({ handleSubmit }) => (\r\n                            <Form onSubmit={handleSubmit} loading={loading}>\r\n                                <Field name='title' placeholder='Title' value={visit.title} component={TextInput} />\r\n                                <Field name='description' rows={3} placeholder='Description' value={visit.description} component={TextAreaInput} />\r\n                                <Field name='category' placeholder='category' value={visit.category} component={SelectInput} options={category} />\r\n                                <Form.Group>\r\n                                <Field name='date' date={true} placeholder='Date' value={visit.date} component={DateInput}/>\r\n                                <Field name='time' time={true} placeholder='Time' value={visit.date} component={DateInput}/>\r\n                                </Form.Group>\r\n                                <Field name='venue' placeholder='venue' value={visit.venue} component={TextInput} />\r\n                                <Field name='city' placeholder='city' value={visit.city} component={TextInput} />\r\n                                <Button loading={submitting} disabled={loading} floated='right' positive type='submit' content='Submit' />\r\n                                <Button onClick={() => history.push('/visits')} disabled={loading}  floated='right' type='button' content='Cancel' />\r\n                            </Form>  \r\n                        )}\r\n                    />          \r\n                </Segment>\r\n            </Grid.Column>\r\n        </Grid>       \r\n    )\r\n}\r\n\r\nexport default observer(VisitForm)\r\n","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\api\\agent.ts",["117"],"  \r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { IVisit } from '../models/visit_interface';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n        toast.error('Network error - make sure API is running!')\r\n    }\r\n    const {status, data, config} = error.response\r\n    if (status === 404) {\r\n        history.push('/notfound')\r\n    }\r\n    console.log(error.response)\r\n    if (status === 400 && config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/notfound')\r\n    }\r\n    if (status === 500) {\r\n        toast.error('Server error - check the terminal fo more info!')\r\n    }\r\n})\r\n\r\n// Store the response.data\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\n// Want to slow down speed of CRUD operations to test app's behaviour on slow networks\r\n// Currying a function: a process where a function with multiple arguments is transformed into a sequence of nesting functions (the response)\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody) \r\n};\r\n\r\nconst Visits = {\r\n    list: (): Promise<IVisit[]> => requests.get('/visits'),\r\n    details: (id: string) => requests.get(`/visits/${id}`),\r\n    create: (visit: IVisit) => requests.post('/visits', visit),\r\n    update: (visit: IVisit) => requests.put(`/visits/${visit.id}`, visit),\r\n    delete: (id: string) => requests.del(`/visits/${id}`)\r\n}\r\n\r\nexport default {Visits}","C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\LoadingComponent.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\stores\\visitStore.ts",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\home\\HomePage.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\ScrollToTop.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\dashboard\\VisitListItem.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedInfo.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedHeader.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\layout\\NotFound.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\TextInput.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\TextAreaInput.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\SelectInput.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\options\\categoryOptions.ts",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\form\\DateInput.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\common\\util\\util.ts",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\App\\models\\visit_interface.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedChat.tsx",[],"C:\\Users\\ALIA\\Documents\\ASP.NET_Projects\\Pinga\\client-app\\src\\Features\\visits\\details\\VisitDetailedSidebar.tsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":12,"column":26,"nodeType":"124","messageId":"125","endLine":12,"endColumn":37},{"ruleId":"122","severity":1,"message":"126","line":12,"column":39,"nodeType":"124","messageId":"125","endLine":12,"endColumn":49},{"ruleId":"122","severity":1,"message":"127","line":12,"column":51,"nodeType":"124","messageId":"125","endLine":12,"endColumn":57},{"ruleId":"122","severity":1,"message":"128","line":27,"column":59,"nodeType":"124","messageId":"125","endLine":27,"endColumn":75},{"ruleId":"122","severity":1,"message":"129","line":27,"column":88,"nodeType":"124","messageId":"125","endLine":27,"endColumn":98},{"ruleId":"130","severity":1,"message":"131","line":49,"column":1,"nodeType":"132","endLine":49,"endColumn":24},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"@typescript-eslint/no-unused-vars","'deleteVisit' is assigned a value but never used.","Identifier","unusedVar","'submitting' is assigned a value but never used.","'target' is assigned a value but never used.","'initialFormState' is assigned a value but never used.","'clearVisit' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]